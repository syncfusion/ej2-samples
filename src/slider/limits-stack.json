{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"content-wrapper\">\n        <div class=\"sliderwrap\">\n            <label class=\"userselect\">MinRange Slider With Limits</label>\n            <div id=\"minrange\"></div>\n        </div>\n        <div class=\"sliderwrap\">\n            <label class=\"userselect\">Range Slider With Limits</label>\n            <div id=\"range\"></div>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-4 property-section property-custom\">\n    <table id=\"property\" title=\"Properties\">\n        <tbody>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"userselect\">MinStart</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <input id=\"minStart\" type=\"text\">\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"userselect\">MinEnd</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <input id=\"minEnd\" type=\"text\">\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"userselect\">MaxStart</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <input id=\"maxStart\" type=\"text\">\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"userselect\">MaxEnd</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <input id=\"maxEnd\" type=\"text\">\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"userselect\">Lock First Handle</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <input id=\"fixedOne\" type=\"checkbox\">\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\">\n                    <div class=\"userselect\">Lock Second Handle</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <input id=\"fixedSecond\" type=\"checkbox\">\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n\n\n\n\n<style>\n    .content-wrapper {\n        width: 52%;\n        margin: 0 auto;\n        min-width: 185px;\n    }\n\n    .sliderwrap {\n        margin-top: 45px;\n    }\n\n    .e-bigger .content-wrapper {\n        width: 80%;\n    }\n\n    .sliderwrap label {\n        padding-bottom: 50px;\n        font-size: 13px;\n        font-weight: 500;\n        margin-top: 15px;\n    }\n\n    .userselect {\n        -webkit-user-select: none;\n        /* Safari 3.1+ */\n        -moz-user-select: none;\n        /* Firefox 2+ */\n        -ms-user-select: none;\n        /* IE 10+ */\n        user-select: none;\n        /* Standard syntax */\n    }\n\n    .property-custom td {\n        padding: 5px;\n    }\n</style>\n</div></body></html>","index.ts":"{{ripple}}\nimport { Slider, NumericTextBox, ChangeEventArgs } from '@syncfusion/ej2-inputs';\nimport { CheckBox, ChangeEventArgs as CheckBoxChange } from '@syncfusion/ej2-buttons';\n\n/**\n * Limits sample\n */\n// tslint:disable-next-line:max-func-body-length\n\n    \n    // Initialize Slider Component\n    let minrangeObj: Slider = new Slider({\n        // Set slider minimum and maximum values\n        min: 0, max: 100,\n        // Set the value for slider\n        value: 25,\n        // Set the step value\n        step: 1,\n        // Initialize ticks with placement, largestep, smallstep\n        ticks: { placement: 'Before', largeStep: 20, smallStep: 5, showSmallTicks: true },\n        // Set the type for slider\n        type: 'MinRange',\n        // Set the limit values for the slider\n        limits: { enabled: true, minStart: 10, minEnd: 40 },\n        // Initialize tooltip with placement and showOn\n        tooltip: { isVisible: true, placement: 'Before', showOn: 'Focus' }\n    });\n    minrangeObj.appendTo('#minrange');\n\n    // Initialize Slider Component\n    let rangeObj: Slider = new Slider({\n        // Set slider minimum and maximum values\n        min: 0, max: 100,\n        // Set the intial range values for slider\n        value: [25, 75],\n        // Set the step value\n        step: 1,\n        // Set the type to render range slider\n        type: 'Range',\n        // Initialize ticks with placement, largestep, smallstep\n        ticks: { placement: 'Before', largeStep: 20, smallStep: 5, showSmallTicks: true },\n        // Set the limit values for the slider\n        limits: { enabled: true, minStart: 10, minEnd: 40, maxStart: 60, maxEnd: 90 },\n        // Initialize tooltip with placement and showOn\n        tooltip: { isVisible: true, placement: 'Before', showOn: 'Focus' }\n    });\n    rangeObj.appendTo('#range');\n\n    // Initialize NumericTextBox\n    let minStart: NumericTextBox = new NumericTextBox({\n        value: 10,\n        min: 0,\n        max: 100,\n        change: minStartChange\n    });\n    minStart.appendTo('#minStart');\n\n    let minEnd: NumericTextBox = new NumericTextBox({\n        value: 40,\n        min: 0,\n        max: 100,\n        change: minEndChange\n    });\n    minEnd.appendTo('#minEnd');\n\n    let maxStart: NumericTextBox = new NumericTextBox({\n        value: 60,\n        min: 0,\n        max: 100,\n        change: maxStartChange\n    });\n    maxStart.appendTo('#maxStart');\n\n    let maxEnd: NumericTextBox = new NumericTextBox({\n        value: 90,\n        min: 0,\n        max: 100,\n        change: maxEndChange\n    });\n    maxEnd.appendTo('#maxEnd');\n\n    // Initialize Checkbox\n    let fixedOne: CheckBox = new CheckBox({ change: fixOne });\n    fixedOne.appendTo('#fixedOne');\n\n    let fixedSecond: CheckBox = new CheckBox({ change: fixSecond });\n    fixedSecond.appendTo('#fixedSecond');\n\n    // Eventlisteners to lock first handle of the both sliders\n    function fixOne(args: CheckBoxChange): void {\n        minrangeObj.limits.startHandleFixed = args.checked;\n        rangeObj.limits.startHandleFixed = args.checked;\n    }\n\n    // Eventlisteners to lock second handle of the both sliders\n    function fixSecond(args: CheckBoxChange): void {\n        minrangeObj.limits.endHandleFixed = args.checked;\n        rangeObj.limits.endHandleFixed = args.checked;\n    }\n\n    // Eventlisteners to change limit values for both sliders\n    function minStartChange(args: ChangeEventArgs): void {\n        minrangeObj.limits.minStart = args.value;\n        rangeObj.limits.minStart = args.value;\n    }\n\n    function minEndChange(args: ChangeEventArgs): void {\n        minrangeObj.limits.minEnd = args.value;\n        rangeObj.limits.minEnd = args.value;\n    }\n\n    function maxStartChange(args: ChangeEventArgs): void {\n        minrangeObj.limits.maxStart = args.value;\n        rangeObj.limits.maxStart = args.value;\n    }\n\n    function maxEndChange(args: ChangeEventArgs): void {\n        minrangeObj.limits.maxEnd = args.value;\n        rangeObj.limits.maxEnd = args.value;\n    }\n\n    if (document.getElementById('right-pane')) {\n        document.getElementById('right-pane').addEventListener('scroll', onScroll);\n    }\n\n    // Handler used to reposition the tooltip on page scroll\n    function onScroll(): void {\n        let slider: Slider[] = [minrangeObj, rangeObj];\n        slider.forEach((slider: any) => {\n            slider.refreshTooltip(slider.tooltipTarget);\n        });\n    }\n\n"}