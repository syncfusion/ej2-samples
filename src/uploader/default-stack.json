{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"control_wrapper\">\n        <!-- Initialize Uploader -->\n        <input type=\"file\" id=\"fileupload\" name=\"UploadFiles\">\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <div id=\"property\" title=\"Properties\">\n        <div style=\"margin-left: 50px; padding-top:25px;\">\n            <input id=\"checkAutoUpload\" name=\"FileUploader\" type=\"checkbox\">\n        </div>\n        <div style=\"margin-left: 50px; padding-top:25px;\">\n            <input id=\"sequentialUpload\" name=\"FileUploader\" type=\"checkbox\">\n        </div>\n    </div>\n</div>\n\n<style>\n    .control_wrapper {\n        max-width: 400px;\n        margin: auto;\n    }\n    .e-upload {\n        width: 100%;\n        position: relative;\n        margin-top: 15px;\n        float: none;\n    }\n    .e-upload .e-upload-actions {\n        float: none;\n        text-align: right;\n    }\n    .control_wrapper .e-upload .e-upload-drag-hover {\n        margin: 0;\n    }\n</style>\n\n\n\n\n</div></body></html>","index.ts":"{{ripple}}\n\nimport { Uploader, RemovingEventArgs } from '@syncfusion/ej2-inputs';\nimport { CheckBox, ChangeEventArgs } from '@syncfusion/ej2-buttons';\n\n/**\n * Uploader default functionalities sample\n */\n\n    \n\n    let dropElement: HTMLElement = document.getElementsByClassName('control-fluid')[0] as HTMLElement;\n    // Initialize the uploader component\n    let uploadObj: Uploader = new Uploader({\n        asyncSettings: {\n            saveUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save',\n            removeUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove'\n        },\n        removing: onFileRemove,\n        dropArea: dropElement\n    });\n    uploadObj.appendTo('#fileupload');\n\n    function onFileRemove(args: RemovingEventArgs) : void {\n        args.postRawFile = false;\n    }\n    // initialize check box component\n    let checkBoxObj: CheckBox = new CheckBox({\n        checked: true,\n        label: 'Auto Upload',\n        change: (args: ChangeEventArgs) => {\n            uploadObj.autoUpload = args.checked;\n            uploadObj.clearAll();\n        }\n    });\n    checkBoxObj.appendTo('#checkAutoUpload');\n\n    let checkBoxObj1: CheckBox = new CheckBox({\n        checked: false,\n        label: 'Sequential Upload',\n        change: (args: ChangeEventArgs) => {\n            uploadObj.sequentialUpload = args.checked;\n            uploadObj.clearAll();\n        }\n    });\n    checkBoxObj1.appendTo('#sequentialUpload');\n"}