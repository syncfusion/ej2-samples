{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"control_wrapper\">\n        <!-- Initialize Uploader -->\n        <input type=\"file\" name=\"UploadFiles\" id=\"fileupload\">\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <div id=\"property\" title=\"Properties\">\n        <div style=\"margin-left: 50px; padding-top:25px;\">\n            <button class=\"e-btn e-css\" id=\"clearbtn\" title=\"Clear All\">Clear All</button>\n        </div>\n    </div>\n</div>\n<style>\n    .control_wrapper {\n        max-width: 500px;\n        margin: auto;\n    }\n    .e-upload {\n        width: 100%;\n        position: relative;\n        margin-top: 15px;\n        float: none;\n    }\n    .e-upload .e-upload-actions {\n        float: none;\n        text-align: right;\n    }\n</style>\n\n\n\n\n</div></body></html>","index.ts":"{{ripple}}\n\nimport { Uploader, RemovingEventArgs } from '@syncfusion/ej2-inputs';\n\n/**\n * Uploader preload functionalities sample\n */\n\n    \n    let dropElement: HTMLElement = document.getElementsByClassName('control-fluid')[0] as HTMLElement;\n    // Define the set of file details in FilesInfo[] type.\n    let preloadFiles: any = [\n        {name: 'Nature', size: 500000, type: '.png'},\n        {name: 'TypeScript Succinctly', size: 12000, type: '.pdf'},\n        {name: 'ASP.NET Webhooks', size: 500000, type: '.docx'},\n    ];\n    //Initialize the control by preload files \n    let uploadObj: Uploader = new Uploader({\n        asyncSettings: {\n            saveUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save',\n            removeUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove'\n        },\n        files: preloadFiles,\n        removing: onFileRemove,\n        dropArea: dropElement\n    });\n    uploadObj.appendTo('#fileupload');\n\n    function onFileRemove(args: RemovingEventArgs) : void {\n        args.postRawFile = false;\n    }\n    document.getElementById('clearbtn').onclick = () => {\n        uploadObj.clearAll();\n    };\n"}