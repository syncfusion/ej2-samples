{"map-data/top-location.json":"{\r\n    \"topPopulation\":[\r\n        {\r\n            \"name\": \"Tokyo\",\r\n            \"latitude\": 35.6894875,\r\n            \"longitude\": 139.6917064,\r\n            \"population\": 33200000,\r\n            \"Country\": \"Japan\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"New York\",\r\n            \"latitude\": 40.7127753,\r\n            \"longitude\": -74.0059728,\r\n            \"population\": 17800000,\r\n            \"Country\": \"United States\",\r\n            \"Continent\": \"North America\",\r\n            \"color\": \"green\",\r\n            \"shape\": \"Diamond\"\r\n        },\r\n        {\r\n            \"name\": \"Sao Paulo\",\r\n            \"latitude\": -23.5505199,\r\n            \"longitude\": -46.6333094,\r\n            \"population\": 17700000,\r\n            \"Country\": \"Brazil\",\r\n            \"Continent\": \"South America\",\r\n            \"color\": \"orange\",\r\n            \"shape\": \"InvertedTriangle\"\r\n        },\r\n        {\r\n            \"name\": \"Seoul/Incheon\",\r\n            \"latitude\": 37.566535,\r\n            \"longitude\": 126.9779692,\r\n            \"population\": 17500000,\r\n            \"Country\": \"South Korea\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Mexico City\",\r\n            \"latitude\": 19.2464696,\r\n            \"longitude\": -99.1013498,\r\n            \"population\": 17400000,\r\n            \"Country\": \"Mexico\",\r\n            \"Continent\": \"North America\",\r\n            \"color\": \"green\",\r\n            \"shape\": \"Diamond\"\r\n        },\r\n        {\r\n            \"name\": \"Osaka/Kobe/Kyoto\",\r\n            \"latitude\": 35.0212466,\r\n            \"longitude\": 135.7555968,\r\n            \"population\": 16425000,\r\n            \"Country\": \"Japan\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Manila\",\r\n            \"latitude\": 14.5995124,\r\n            \"longitude\": 120.9842195,\r\n            \"population\": 14750000,\r\n            \"Country\": \"Philippines\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Mumbai\",\r\n            \"latitude\": 19.0759837,\r\n            \"longitude\": 72.8776559,\r\n            \"population\": 14350000,\r\n            \"Country\": \"India\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Delhi\",\r\n            \"latitude\": 28.6139391,\r\n            \"longitude\": 77.2090212,\r\n            \"population\": 14300000,\r\n            \"Country\": \"India\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Jakarta\",\r\n            \"latitude\": -6.17511,\r\n            \"longitude\": 106.8650395,\r\n            \"population\": 14250000,\r\n            \"Country\": \"Indonesia\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Lagos\",\r\n            \"latitude\": 6.5243793,\r\n            \"longitude\": 3.3792057,\r\n            \"population\": 13400000,\r\n            \"Continent\": \"Africa\",\r\n            \"Country\": \"Nigeria\",\r\n            \"color\": \"blue\",\r\n            \"shape\": \"Rectangle\"\r\n        },\r\n        {\r\n            \"name\": \"Kolkata\",\r\n            \"latitude\": 22.572646,\r\n            \"longitude\": 88.363895,\r\n            \"population\": 12700000,\r\n            \"Country\": \"India\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Cairo\",\r\n            \"latitude\": 30.0444196,\r\n            \"longitude\": 31.2357116,\r\n            \"population\": 12200000,\r\n            \"Country\": \"Egypt\",\r\n            \"Continent\": \"Africa\",\r\n            \"color\": \"blue\",\r\n            \"shape\": \"Rectangle\"\r\n        },\r\n        {\r\n            \"name\": \"Los Angeles\",\r\n            \"latitude\": 34.0522265,\r\n            \"longitude\": -118.2436596,\r\n            \"population\": 11789000,\r\n            \"Continent\": \"North America\",\r\n            \"Country\": \"United States\",\r\n            \"color\": \"green\",\r\n            \"shape\": \"Diamond\"\r\n        },\r\n        {\r\n            \"name\": \"Buenos Aires\",\r\n            \"latitude\": -34.6036844,\r\n            \"longitude\": -58.3815591,\r\n            \"population\": 11200000,\r\n            \"Country\": \"Argentina\",\r\n            \"color\": \"orange\",\r\n            \"Continent\": \"South America\",\r\n            \"shape\": \"InvertedTriangle\"\r\n        },\r\n        {\r\n            \"name\": \"Rio de Janeiro\",\r\n            \"latitude\": -22.9068467,\r\n            \"longitude\": -43.1728965,\r\n            \"population\": 10800000,\r\n            \"Country\": \"Brazil\",\r\n            \"color\": \"orange\",\r\n            \"Continent\": \"South America\",\r\n            \"shape\": \"InvertedTriangle\"\r\n        },\r\n        {\r\n            \"name\": \"Moscow\",\r\n            \"latitude\": 55.755826,\r\n            \"longitude\": 37.6173,\r\n            \"population\": 10500000,\r\n            \"Country\": \"Russia\",\r\n            \"color\": \"yellow\",\r\n            \"Continent\": \"Europe\",\r\n            \"shape\": \"Triangle\"\r\n        },\r\n        {\r\n            \"name\": \"Shanghai\",\r\n            \"latitude\": 31.2303904,\r\n            \"longitude\": 121.4737021,\r\n            \"population\": 10000000,\r\n            \"Country\": \"China\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Karachi\",\r\n            \"latitude\": 25.0700428,\r\n            \"longitude\": 67.2847875,\r\n            \"population\": 9800000,\r\n            \"Country\": \"Pakistan\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Paris\",\r\n            \"latitude\": 48.856614,\r\n            \"longitude\": 2.3522219,\r\n            \"population\": 9645000,\r\n            \"Country\": \"France\",\r\n            \"color\": \"yellow\",\r\n            \"Continent\": \"Europe\",\r\n            \"shape\": \"Triangle\"\r\n        },\r\n        {\r\n            \"name\": \"Istanbul\",\r\n            \"latitude\": 41.0082376,\r\n            \"longitude\": 28.9783589,\r\n            \"population\": 9000000,\r\n            \"Country\": \"Istanbul\",\r\n            \"color\": \"yellow\",\r\n            \"Continent\": \"Europe\",\r\n            \"shape\": \"Triangle\"\r\n        },\r\n        {\r\n            \"name\": \"Nagoya\",\r\n            \"latitude\": 35.1814464,\r\n            \"longitude\": 136.906398,\r\n            \"population\": 9000000,\r\n            \"Country\": \"Japan\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Beijing\",\r\n            \"latitude\": 39.9041999,\r\n            \"longitude\": 116.4073963,\r\n            \"population\": 8614000,\r\n            \"Country\": \"China\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Chicago\",\r\n            \"latitude\": 41.8781136,\r\n            \"longitude\": -87.6297982,\r\n            \"population\": 8308000,\r\n            \"Country\": \"United States\",\r\n            \"color\": \"green\",\r\n            \"Continent\": \"North America\",\r\n            \"shape\": \"Diamond\"\r\n        },\r\n        {\r\n            \"name\": \"London\",\r\n            \"latitude\": 51.5073509,\r\n            \"longitude\": -0.1277583,\r\n            \"population\": 8278000,\r\n            \"Country\": \"United Kingdom\",\r\n            \"color\": \"yellow\",\r\n            \"Continent\": \"Europe\",\r\n            \"shape\": \"Triangle\"\r\n        }\r\n    ]\r\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-9 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"container\"></div>\n        <!-- source link -->\n        <div style=\"float: right; margin-right: 10px;\">Source:\n            <a href=\"http://www.citymayors.com/statistics/largest-cities-population-125.html\" target=\"_blank\">www.citymayors.com</a>\n        </div>\n    </div>\n</div>\n<!-- property panel-->\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px;\">Bind markers shape from data source\n                    </div>\n                </td>\n                <td style=\"width: 20% \">\n                    <div style=\"padding-top:0px;\">\n                        <input type=\"checkbox\" id=\"shape\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px;\">Bind markers color from data source\n                    </div>\n                </td>\n                <td style=\"width: 20%\">\n                    <div style=\"padding-top:0px;\">\n                        <input type=\"checkbox\" id=\"color\">\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<!-- marker tooltip template -->\n<div id=\"template\" style=\"display:none\">\n    <div class=\"toolback\">\n        <div class=\"listing2\">\n            <center>\n                ${name}\n            </center>\n        </div>\n        <hr style=\"margin-top: 2px;margin-bottom:5px;border:0.5px solid #DDDDDD\">\n        <div>\n            <span class=\"listing1\">Country : </span><span class=\"listing2\">${Country}</span>\n        </div>\n        <div>\n            <span class=\"listing1\">Continent : </span><span class=\"listing2\">${Continent}</span>\n        </div>\n        <div>\n            <span class=\"listing1\">Population : </span><span class=\"listing2\">${population}</span>\n        </div>\n    </div>\n\n</div>\n\n\n<!-- style for marker tooltip -->\n<style>\n    .toolback {\n        border-radius: 4px;\n        border: 1px #abb9c6;\n        opacity: 90%;\n        background: rgba(53, 63, 76, 0.90);\n        box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.40);\n        padding-bottom: 10px;\n        padding-top: 10px;\n        padding-left: 10px;\n        padding-right: 10px;\n        width: 170px;\n    }\n\n    .listing1 {\n        font-size: 13px;\n        color: #cccccc\n    }\n\n    .listing2 {\n        font-size: 13px;\n        color: #ffffff;\n        font-weight: 500;\n    }\n</style>\n</div></body></html>","index.ts":"{{ripple}}/**\r\n * Marker sample\r\n */\r\nimport { Maps, Marker, MapsTooltip, ILoadEventArgs, MapsTheme, MapAjax } from '@syncfusion/ej2-maps';\r\nimport * as dataSource from './map-data/top-location.json';\r\nimport { CheckBox, ChangeEventArgs as CheckBoxChangeEvents } from '@syncfusion/ej2-buttons';\r\nimport { EmitType } from '@syncfusion/ej2-base';\r\nlet data: any  = dataSource as any;\r\nMaps.Inject(Marker, MapsTooltip);\r\n\r\n/**\r\n * Code for Maps\r\n */\r\n\r\n\r\n    let maps: Maps = new Maps({\r\n\r\n        useGroupingSeparator: true,\r\n        format: 'n',\r\n        zoomSettings: {\r\n            enable: false\r\n        },\r\n        titleSettings: {\r\n            text: 'Top 25 populated cities in the world',\r\n            textStyle: {\r\n                size: '16px'\r\n            }\r\n        },\r\n        layers: [\r\n            {\r\n                shapeData: new MapAjax('//npmci.syncfusion.com/development/demos/src/maps/map-data/world-map.json'),\r\n                shapeSettings: {\r\n                    fill: '#C3E6ED'\r\n                },\r\n                markerSettings: [\r\n                    {\r\n                        dataSource: data.topPopulation,\r\n                        visible: true,\r\n                        animationDuration: 0,\r\n                        shape: 'Circle',\r\n                        fill: 'white',\r\n                        width: 10,\r\n                        border: { width: 2, color: '#285255' },\r\n                        tooltipSettings: {\r\n                            template: '#template',\r\n                            visible: true,\r\n                            valuePath: 'population',\r\n                        }\r\n                    },\r\n                ]\r\n            }\r\n        ]\r\n    });\r\n    maps.appendTo('#container');\r\n\r\n    let markerShape: EmitType<CheckBoxChangeEvents>;\r\n    let markerShapeCheckBox: CheckBox = new CheckBox(\r\n    {\r\n        change: markerShape, checked: false\r\n    },\r\n    '#shape');\r\n    markerShapeCheckBox.change = markerShape = (e: CheckBoxChangeEvents) => {\r\n        if (e.checked) {\r\n            maps.layers[0].markerSettings[0].shapeValuePath = 'shape';\r\n        } else {\r\n            maps.layers[0].markerSettings[0].shapeValuePath = null;\r\n        }\r\n    };\r\n    let markerColor: EmitType<CheckBoxChangeEvents>;\r\n    let markerColorCheckBox: CheckBox = new CheckBox(\r\n    {\r\n        change: markerColor, checked: false\r\n    },\r\n    '#color');\r\n    markerColorCheckBox.change = markerColor = (e: CheckBoxChangeEvents) => {\r\n        if (e.checked) {\r\n            maps.layers[0].markerSettings[0].colorValuePath = 'color';\r\n        } else {\r\n            maps.layers[0].markerSettings[0].colorValuePath = null;\r\n        }\r\n    };\r\n"}