{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-8 control-section\">\n    <div class=\"control_wrapper\">\n        <div id=\"dropArea\">\n            <span id=\"drop\" class=\"droparea\"> Drop files here or <a href id=\"browse\"><u>Browse</u></a> </span>\n            <input type=\"file\" name=\"UploadFiles\" id=\"fileupload\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <div id=\"property\" title=\"Properties\">\n        <div style=\"margin-left: 50px; padding-top:25px;\">\n            <button class=\"e-btn e-css\" id=\"clearbtn\">Clear All</button>\n        </div>\n    </div>\n</div>\n<style>\n\n    #dropArea {\n            min-height: 50px;\n            padding-top: 15px;\n            position: relative;\n    }\n\n    #drop {\n        padding: 3% 30% 3%;\n        display: inherit;\n        border: 1px dashed #c3c3cc\n    }\n\n    .droparea {\n       font-size: 13px;\n    } \n\n    .e-bigger .droparea {\n       font-size: 14px;\n    } \n\n    .control_wrapper {\n        max-width: 400px;\n        margin: auto;\n    }\n\n    .e-file-select-wrap {\n        display: none;\n    }\n\n    .e-upload {\n        float: none;\n        border: none;\n    }\n\n    .ul-element {\n        list-style: none;\n        width: 100%;\n        padding-left: 0;\n    }\n\n    .file-name {\n        padding: 8px 6px 8px 0;\n        font-size: 13px;\n        width: 46%;\n        display: inline-block;\n        position: relative;\n        top: 4px;\n    }\n\n    .e-bigger .file-name {\n        font-size: 14px;\n    }\n\n    .file-size {\n        padding: 4px;\n        font-size: 13px;\n        width: 18%;\n        display: inline-block;\n        position: relative;\n    }\n\n    .e-bigger .file-size {\n        font-size: 14px;\n    }\n\n    .file-lists {\n        border: 1px solid lightgray;\n        padding: 0 6px 0 14px;\n        margin-top: 15px;\n        position: relative;\n        background: rgba(0, 0, 0, 0.04);\n    }\n\n    .file-size, .file-name {\n        font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\";\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    span.progress-bar-container {\n        display: block;\n        float: right;\n        height: 20px;\n        right: 13%;\n        top: 14px;\n        position: relative;\n        width: 20%;\n    }\n\n    .progress{\n        width: 100%;\n        height: 15px;\n        -webkit-appearance: none;\n    }\n\n    .close-icon-container\n    {\n        font-size: 11px;\n        height: 24px;\n        margin: 0 12px 0 22px;\n        padding: 0;\n        position: absolute;\n        right: 0;\n        width: 24px;\n        top: 6px;\n    }\n    .close-icon-container.delete-icon {\n        cursor: pointer;\n\n    }\n\n    .close-icon-container.e-icons::before {\n        left: 7px;\n        position: inherit;\n        top: 7px;\n        content: '\\e932';\n    }\n\n    .bootstrap4 .close-icon-container.e-icons::before {\n        left: 7px;\n        position: inherit;\n        top: 7px;\n        content: '\\e745';\n    }\n    .bootstrap4 .file-lists {\n        background: #fff;\n    }\n    .close-icon-container.delete-icon::before {\n        content: '\\e94a';\n    }\n    .bootstrap4 .close-icon-container.delete-icon::before {\n        content: '\\e773';\n    }\n\n    .close-icon-container.delete-icon:hover {\n        background-color: rgba(0, 0, 0, 0.12);\n        border-color: transparent;\n        border-radius: 50%;\n        box-shadow: 0 0 0 transparent;\n    }\n\n    .bootstrap4 .close-icon-container:hover {\n        background-color: #e9ecef;\n        border-color: transparent;\n        border-radius: 4px;\n        box-shadow: 0 0 0 transparent;\n    }\n\n    .highcontrast .close-icon-container.delete-icon:hover {\n        background-color: #ffd939;\n        color: black;\n    }\n\n    .highcontrast .close-icon-container {\n        color: #ffffff;\n    }\n\n    .upload-success {\n       color: #2bc700;\n    }\n\n    .upload-fails {\n        color: #f44336;\n    }\n\n    progress::-webkit-progress-bar {\n        border: 1px solid lightgrey;\n        background-color: #ffffff;\n        border-radius: 2px;\n    }\n    #dropArea progress {\n        border: 1px solid lightgrey;\n        background-color: #ffffff;\n        border-radius: 2px;\n    }\n    .bootstrap4 #dropArea progress {\n        background-color: #dee2e6;\n        border-radius: 4px;\n    }\n    .highcontrast #dropArea progress {\n        background-color: #000000;\n    }\n    .highcontrast progress::-webkit-progress-bar {\n        background-color: #000000;\n    }\n    .material progress::-webkit-progress-value {\n        border-radius: 2px; \n        background-color: #ff4081;\n    }\n    .bootstrap progress::-webkit-progress-value {\n        border-radius: 2px; \n        background-color: #1f496e;\n    }\n    .fabric progress::-webkit-progress-value {\n        background-color: #1763ff;\n        border-radius: 2px; \n        top: -66px;\n    }\n    .highcontrast progress::-webkit-progress-value {\n        background-color: #ffd939;\n        border-radius: 2px; \n    }\n    .bootstrap4 progress::-webkit-progress-value {\n        background-color: #007bff;\n        border-radius: 4px; \n    }\n    .material progress::-moz-progress-bar {\n        border-radius: 2px; \n        background-color: #ff4081;\n    }\n    .bootstrap progress::-moz-progress-bar {\n        border-radius: 2px; \n        background-color: #1f496e;\n    }\n    .fabric progress::-moz-progress-bar {\n        background-color: #1763ff;\n        border-radius: 2px; \n        top: -66px;\n    }\n    .highcontrast progress::-moz-progress-bar {\n        background-color: #ffd939;\n        border-radius: 2px; \n    }\n    .material #dropArea span a {\n        color:#ff4081;\n    }\n    .fabric #dropArea span a {\n        color: #1763ff;\n    }\n    .bootstrap #dropArea span a {\n        color: #1f496e;\n    }\n    .highcontrast #dropArea span a {\n        color: #ffd939;\n    }\n\n</style>\n\n\n\n\n</div></body></html>","index.ts":"{{ripple}}\nimport { Uploader, FileInfo } from '@syncfusion/ej2-inputs';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { createElement, isNullOrUndefined, detach, EventHandler } from '@syncfusion/ej2-base';\n/**\n * Uploader custom template sample\n */\n// tslint:disable-next-line\n\n    \n    let dropElement: HTMLElement = document.getElementsByClassName('control-fluid')[0] as HTMLElement;\n    let filesDetails : FileInfo[] = [];\n    let filesList: Element[] = [];\n    let uploadObj: Uploader = new Uploader({\n        asyncSettings: {\n            saveUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save',\n            removeUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove'\n        }, dropArea: dropElement, selected: onFileSelect, progress: onFileUpload, success: onUploadSuccess,\n        failure: onUploadFailed, removing: onFileRemove,\n    });\n    uploadObj.appendTo('#fileupload');\n    document.getElementById('browse').onclick = () => {\n        document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\n        return false;\n    };\n    document.getElementById('clearbtn').onclick = () => {\n        if (!isNullOrUndefined(document.getElementById('dropArea').querySelector('.upload-list-root'))) {\n            uploadObj.element.value = '';\n            detach(document.getElementById('dropArea').querySelector('.upload-list-root'));\n            filesDetails = [];\n            filesList = [];\n        }\n    };\n    let parentElement : HTMLElement;\n    let proxy : any;\n    let progressbarContainer : HTMLElement;\n    function onFileSelect(args : any) : void  {\n        if (isNullOrUndefined(document.getElementById('dropArea').querySelector('.upload-list-root'))) {\n            parentElement = createElement('div', { className: 'upload-list-root' });\n            parentElement.appendChild(createElement('ul', {className: 'ul-element' }));\n            document.getElementById('dropArea').appendChild(parentElement);\n        }\n        for (let i : number = 0; i < args.filesData.length; i++) {\n            let fileName : string = args.filesData[i].name;\n            for (let j: number = 0; j < filesDetails.length; j++) {\n                if (filesDetails[j].name === fileName) {\n                    args.filesData.splice(i, 1);\n                    --i;\n                    j = filesDetails.length;\n                }\n            }\n        }\n        for (let i : number = 0; i < args.filesData.length; i++) {\n            formSelectedData(args.filesData[i], this);\n        }\n        filesDetails = filesDetails.concat(args.filesData);\n        this.upload(args.filesData, true);\n        args.cancel = true;\n    }\n    function formSelectedData ( selectedFiles : FileInfo, proxy: any ) : void {\n        let liEle : HTMLElement = createElement('li',  { className: 'file-lists', attrs: {'data-file-name' : selectedFiles.name} });\n        liEle.appendChild(createElement('span', {className: 'file-name ', innerHTML: selectedFiles.name }));\n        liEle.appendChild(createElement('span', {className: 'file-size ', innerHTML: proxy.bytesToSize(selectedFiles.size) }));\n        if (selectedFiles.statusCode === '1') {\n            progressbarContainer = createElement('span', {className: 'progress-bar-container'});\n            progressbarContainer.appendChild(createElement('progress', {className: 'progress', attrs: {value : '0', max : '100'}} ));\n            liEle.appendChild(progressbarContainer);\n        } else {\n            liEle.querySelector('.file-name').classList.add('upload-fails');\n        }\n        let closeIconContainer : HTMLElement = createElement('span', {className: 'e-icons close-icon-container'});\n        EventHandler.add(closeIconContainer, 'click', removeFiles, proxy);\n        liEle.appendChild(closeIconContainer);\n        document.querySelector('.ul-element').appendChild(liEle);\n        filesList.push(liEle);\n    }\n    function onFileUpload(args : any) : void {\n        let li : Element = document.getElementById('dropArea').querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        EventHandler.remove(li.querySelector('.close-icon-container'), 'click', removeFiles);\n        let progressValue : number = Math.round((args.e.loaded / args.e.total) * 100);\n        if (!isNaN(progressValue)) {\n            li.getElementsByTagName('progress')[0].value = progressValue;\n        }\n    }\n    function onUploadSuccess(args : any) : void {\n        let spinnerElement: HTMLElement = document.getElementById('dropArea');\n        let li : Element = document.getElementById('dropArea').querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        if (!isNullOrUndefined(li.querySelector('.progress-bar-container'))) {\n            detach(li.querySelector('.progress-bar-container'));\n        }\n        if (args.operation === 'upload') {\n            li.querySelector('.file-name').classList.add('upload-success');\n            li.querySelector('.close-icon-container').classList.add('delete-icon');\n            (li.querySelector('.close-icon-container') as HTMLElement).onclick = () => {\n                generateSpinner(this.uploadWrapper);\n            };\n            (li.querySelector('.close-icon-container') as HTMLElement).onkeydown = (e: any) => {\n                if (e.keyCode === 13) {\n                    generateSpinner(e.target.closest('.e-upload'));\n                }\n            };\n        }\n        if (args.operation === 'remove') {\n            filesDetails.splice(filesList.indexOf(li), 1);\n            filesList.splice(filesList.indexOf(li), 1);\n            detach(li);\n            hideSpinner(spinnerElement);\n            detach(spinnerElement.querySelector('.e-spinner-pane'));\n        }\n        EventHandler.add(li.querySelector('.close-icon-container'), 'click', removeFiles, this);\n    }\n    function generateSpinner(targetElement: HTMLElement): void {\n        createSpinner({ target: targetElement, width: '25px' });\n        showSpinner(targetElement);\n    }\n    function onUploadFailed(args : any) : void {\n        let li : Element = document.getElementById('dropArea').querySelector('[data-file-name=\"' + args.file.name + '\"]');\n        EventHandler.add(li.querySelector('.close-icon-container'), 'click', removeFiles, this);\n        li.querySelector('.file-name ').classList.add('upload-fails');\n        if (args.operation === 'upload') {\n            detach(li.querySelector('.progress-bar-container'));\n        }\n    }\n    function removeFiles(args : any) : void {\n        if (!isNullOrUndefined(args.currentTarget)) {\n            if (filesDetails[filesList.indexOf(args.currentTarget.parentElement)].statusCode === '2' ) {\n                this.remove(filesDetails[filesList.indexOf(args.currentTarget.parentElement)]);\n            } else {\n                onFileRemove(args);\n            }\n        }\n    }\n    function onFileRemove(args: any) : void {\n        if (!isNullOrUndefined(args.currentTarget)) {\n            if (filesDetails[filesList.indexOf(args.currentTarget.parentElement)].statusCode !== '2') {\n                detach(args.currentTarget.parentElement);\n            }\n        }\n        args.postRawFile = false;\n    }\n"}