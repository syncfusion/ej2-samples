{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"diagram\" class=\"diagramclass\">\n    </div>\n</div>\n\n\n\n</div></body></html>","index.ts":"{{ripple}}\n/**\n * Remote Data binding sample\n */\n\nimport {\n    Diagram, NodeModel, ConnectorModel, DataBinding, HierarchicalTree, TreeInfo, DiagramTools\n} from '@syncfusion/ej2-diagrams';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\n\nexport interface DataInfo {\n    [key: string]: string;\n}\n\nDiagram.Inject(DataBinding, HierarchicalTree);\n\n\n//Sets the default values of nodes\nfunction getNodeDefaults(obj: NodeModel): NodeModel {\n    obj.width = 80;\n    obj.height = 40;\n    //Initialize shape\n    obj.shape = { type: 'Basic', shape: 'Rectangle' };\n    obj.style = { fill: '#048785', strokeColor: 'Transparent' };\n    return obj;\n}\n\n//Sets the default values of connector\nfunction getConnectorDefaults(connector: ConnectorModel): ConnectorModel {\n    connector.type = 'Orthogonal';\n    connector.style.strokeColor = '#048785';\n    connector.targetDecorator.shape = 'None';\n    return connector;\n}\n\n// tslint:disable-next-line:max-func-body-length\n\n    \n    //Initializes diagram control\n    let diagram: Diagram = new Diagram({\n        width: '100%', height: 490,\n        //Configrues hierarchical tree layout\n        layout: {\n            type: 'HierarchicalTree', margin: { left: 0, right: 0, top: 100, bottom: 0 },\n            verticalSpacing: 40,\n            getLayoutInfo: (node: NodeModel, options: TreeInfo) => {\n                if (options.level === 3) {\n                    node.style.fill = '#3c418d';\n                }\n                if (options.level === 2) {\n                    node.style.fill = '#108d8d';\n                    options.type = 'Center';\n                    options.orientation = 'Horizontal';\n                }\n                if (options.level === 1) {\n                    node.style.fill = '#822b86';\n                }\n            }\n        },\n        //Sets the default values of nodes\n        getNodeDefaults: getNodeDefaults,\n        //Sets the default values of connector\n        getConnectorDefaults: getConnectorDefaults,\n        //Configures data source\n        dataSourceSettings: {\n            id: 'EmployeeID', parentId: 'ReportsTo',\n            dataSource: new DataManager(\n                { url: 'https://mvc.syncfusion.com/Services/Northwnd.svc/', crossDomain: true },\n                new Query().from('Employees').select('EmployeeID,ReportsTo,FirstName').take(9),\n            ),\n            //binds the external data with node\n            doBinding: (nodeModel: NodeModel, data: DataInfo, diagram: Diagram) => {\n                nodeModel.annotations = [{\n                    /* tslint:disable:no-string-literal */\n                    content: data['FirstName'],\n                    style: { color: 'white' }\n                }];\n            }\n        },\n        //Disables all interactions except zoom/pan\n        tool: DiagramTools.ZoomPan,\n        snapSettings: { constraints: 0 }\n    });\n    diagram.appendTo('#diagram');\n\n"}