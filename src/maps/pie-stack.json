{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"container\"></div>\n    <div id=\"chart\"></div>\n    <!-- source link-->\n    <div style=\"float: right; margin-right: 10px;\">Source:\n        <a href=\"http://www.nationmaster.com/country-info/stats/People/Age-structure/55--64-years\" target=\"_blank\">www.nationmaster.com</a>\n    </div>\n</div>\n\n\n</div></body></html>","index.ts":"{{ripple}}\nimport { Maps, Marker, ILoadEventArgs, ILoadedEventArgs, IResizeEventArgs, MapsTheme, Legend, MapAjax } from '@syncfusion/ej2-maps';\nimport { AccumulationChart, PieSeries, DataLabel, AccumulationTooltip } from '@syncfusion/ej2-charts';\nAccumulationChart.Inject(AccumulationChart, PieSeries, DataLabel, AccumulationTooltip);\nMaps.Inject(Marker, Legend);\n/**\n * Dynamic Pie\n */\n\n\n\n    let maps: Maps = new Maps({\n\n        loaded: (args: ILoadedEventArgs) => {\n            let markers: Element = document.getElementById(args.maps.element.id + '_LayerIndex_0_Markers_Template_Group');\n            if (markers) {\n                for (let i: number = 0; i < markers.childElementCount; i++) {\n                    AccumulationChartRender((<Element>markers.childNodes[i].childNodes[0]).id);\n                }\n                count = 0;\n            }\n        },\n        resize: (args: IResizeEventArgs) => {\n            for (let i: number = 0; i < chartCollection.length; i++) {\n                chartCollection[i].destroy();\n            }\n        },\n        titleSettings: {\n            text: 'Top 6 largest countries age group details',\n            textStyle: {\n                size: '16px'\n            }\n        },\n        legendSettings: {\n            visible: true,\n            position: 'Bottom'\n        },\n        zoomSettings: {\n            enable: false\n        },\n        layers: [\n            {\n                shapeData: new MapAjax('//ej2.syncfusion.com/demos/src/maps/map-data/world-map.json'),\n                shapeSettings: {\n                    fill: '#E5E5E5',\n                    colorMapping: [\n                        {\n                            from: 0, to: 4, color: '#634D6F', label: '0-14 years',\n                        },\n                        {\n                            from: 5, to: 14, color: '#B34D6D', label: '15-24 years'\n                        },\n                        {\n                            from: 15, to: 59, color: '#557C5C', label: '25-54 years'\n                        },\n                        {\n                            from: 60, to: 100, color: '#5E55E2', label: '55-64 years'\n                        }\n                    ]\n                },\n                markerSettings: [\n                    {\n                        visible: true,\n                        template: '<div id=\"pieChart1\" style=\"height:70px;width:70px;\"></div>',\n                        dataSource: [\n                            { 'latitude': 61.938950426660604, 'longitude': 97.03125 }\n                        ],\n                        animationDuration: 0\n                    },\n                    {\n                        visible: true,\n                        template: '  <div id=\"pieChart2\" style=\"height:70px;width:70px;\">',\n                        dataSource: [\n                            { 'latitude': 57.70414723434193, 'longitude': -114.08203125 }\n                        ],\n                        animationDuration: 0\n                    },\n                    {\n                        visible: true,\n                        template: '<div id=\"pieChart3\" style=\"top:10px;left:10px;height:70px;width:70px;\"></div>',\n                        dataSource: [\n                            { 'latitude': 39.90973623453719, 'longitude': -103.0078125 }\n                        ],\n                        animationDuration: 0\n                    },\n                    {\n                        visible: true,\n                        template: '<div id=\"pieChart4\" style=\"height:70px;width:70px;\"></div>',\n                        dataSource: [\n                            { 'latitude': 35.746512259918504, 'longitude': 102.216796875 }\n                        ],\n                        animationDuration: 0\n                    },\n                    {\n                        visible: true,\n                        template: '<div id=\"pieChart5\" style=\"height:70px;width:70px;\"></div>',\n                        dataSource: [\n                            { 'latitude': -8.667918002363107, 'longitude': -52.55859375 }\n                        ],\n                        animationDuration: 0\n                    },\n                    {\n                        visible: true,\n                        template: '<div id=\"pieChart6\" style=\"height:70px;width:70px;\"></div>',\n                        dataSource: [\n                            { 'latitude': -23.725011735951796, 'longitude': 132.978515625 }\n                        ],\n                        animationDuration: 0\n                    }\n                ]\n            }\n        ]\n    });\n    maps.appendTo('#container');\n\nlet chartCollection: AccumulationChart[] = [];\nlet count: number = 0;\n\nexport function AccumulationChartRender(id: string): void {\n    let chartData: any = getData();\n    let dataSource: object[] = chartData['data'];\n    let name: string = chartData['name'];\n    let chart: AccumulationChart = new AccumulationChart({\n        background: 'transparent',\n        width: '70',\n        height: '70',\n        tooltip: {\n            enable: true,\n            format: '${point.x} : ${point.y}%'\n        },\n        series: [\n            {\n                explode: true,\n                explodeIndex: 0,\n                explodeOffset: '20%',\n                name: name,\n                palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],\n                dataSource: dataSource,\n                dataLabel: {\n                    visible: true\n                },\n                type: 'Pie',\n                xName: 'x',\n                yName: 'y'\n            }\n        ]\n    });\n    chart.appendTo('#' + id);\n    chartCollection.push(chart);\n}\n\nexport function getData(): object {\n    let dataSource: object[];\n    let dataName: string;\n    if (count === 0) {\n        dataSource = [\n            { 'x': '0-14 years', y: 16 }, { 'x': '15-24 years', y: 11.5 },\n            { 'x': '25-54 years', y: 45.9 }, { 'x': '55-64 years', y: 13.5 },\n        ];\n        dataName = 'Russia';\n    } else if (count === 1) {\n        dataSource = [\n            { 'x': '0-14 years', y: 15.5 }, { 'x': '15-24 years', y: 12.9 },\n            { 'x': '25-54 years', y: 41.4 }, { 'x': '55-64 years', y: 13.3 },\n        ];\n        dataName = 'Canada';\n    } else if (count === 2) {\n        dataSource = [\n            { 'x': '0-14 years', y: 20 }, { 'x': '15-24 years', y: 13.7 },\n            { 'x': '25-54 years', y: 40.2 }, { 'x': '55-64 years', y: 12.3 },\n        ];\n        dataName = 'USA';\n    } else if (count === 3) {\n        dataSource = [\n            { 'x': '0-14 years', y: 17.2 }, { 'x': '15-24 years', y: 15.4 },\n            { 'x': '25-54 years', y: 46.9 }, { 'x': '55-64 years', y: 11.3 },\n        ];\n        dataName = 'China';\n    } else if (count === 4) {\n        dataSource = [\n            { 'x': '0-14 years', y: 24.2 }, { 'x': '15-24 years', y: 16.7 },\n            { 'x': '25-54 years', y: 43.6 }, { 'x': '55-64 years', y: 8.2 },\n        ];\n        dataName = 'Brazil';\n    } else if (count === 5) {\n        dataSource = [\n            { 'x': '0-14 years', y: 18.1 }, { 'x': '15-24 years', y: 13.4 },\n            { 'x': '25-54 years', y: 42 }, { 'x': '55-64 years', y: 11.8 },\n        ];\n        dataName = 'Australia';\n    }\n    count++;\n    return new Object({ name: dataName, data: dataSource });\n}"}